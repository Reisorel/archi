import React, { useEffect, useState, useRef } from "react";
import gsap from "gsap";
import ScrollTrigger from "gsap/ScrollTrigger"; // Import du plugin
import "./About.css";

const portrait = "/images/about/Cassandre.jpg";

export default function About() {
  const words = [
    "r√©novation üõ†Ô∏è",
    "construction üî®",
    "maison individuelleüè†",
    "appartement üè¢",
    "permis de constuire üìú",
    "maitrise d'oeuvre üë∑‚Äç‚ôÄÔ∏è",
    "maison √† la mer üåä",
    "commerce üè™",
  ];

  const titleRef = useRef(null); // Animation titre
  const pictureRef = useRef(null); // Animation image
  const textRef = useRef(null); // Animation texte

  const [index, setIndex] = useState(0); // Index du mot courant
  const wordRef = useRef(null); // Index du mot courant
  const cvRef = useRef(null); // Animation date

  useEffect(() => {
    const tl = gsap.timeline({
      scrollTrigger: {
        trigger: titleRef.current, // D√©clencheur global
        start: "top 90%",
        toggleActions: "play none none none",
      },
    });

    // Animation du titre
    tl.fromTo(
      titleRef.current,
      { y: 50, opacity: 0 },
      { y: 0, opacity: 1, duration: 1.5, ease: "power3.out" }
    );

    // Animation de l'image qui arrive de la gauche
    tl.fromTo(
      pictureRef.current,
      { x: -200, opacity: 0 },
      { x: 0, opacity: 1, duration: 1.2, ease: "power3.out" },
      "-=1" // D√©marre l√©g√®rement avant la fin de l'animation du titre
    );
  }, []);

  // Aninmation texte central
  useEffect(() => {
    gsap.fromTo(
      textRef.current,
      {
        opacity: 0,
        y: 50, // Position initiale en bas
      },
      {
        opacity: 1,
        y: 0, // Arriv√©e normale
        duration: 1,
        ease: "power3.out",
        scrollTrigger: {
          trigger: textRef.current,
          start: "top 90%", // L'animation d√©marre quand 90% de la div est visible
          toggleActions: "play none none none",
        },
      }
    );
  }, []);

  //Animation parapraphe changeant
  useEffect(() => {
    const interval = setInterval(() => {
      // Animation de sortie du mot
      gsap.to(wordRef.current, {
        opacity: 0,
        y: -20, // D√©cale l√©g√®rement vers le haut
        duration: 0.5,
        onComplete: () => {
          // Met √† jour le mot
          setIndex((prevIndex) => (prevIndex + 1) % words.length);
          // Animation d'entr√©e du nouveau mot
          gsap.fromTo(
            wordRef.current,
            { y: 20, opacity: 0 },
            { y: 0, opacity: 1, duration: 0.5 }
          );
        },
      });
    }, 3000); // Change de mot toutes les 3 secondes

    return () => clearInterval(interval); // Nettoyage de l'intervalle
  }, []);

  // Pr√©ration op√©rateur ternaire pour changement d'article.
  const vowels = ["a", "e", "i", "o", "u", "y"];
  const article = vowels.includes(words[index][0].toLowerCase())
    ? "d' "
    : "de ";

  // Animation dates
  useEffect(() => {
    const dates = gsap.utils.toArray(".about-date").reverse(); // R√©cup√®re les √©l√©ments dans l'ordre inverse

    gsap.fromTo(
      dates,
      { x: 100, opacity: 0 }, // D√©part (hors √©cran √† droite, invisible)
      {
        x: 0, // Position normale
        opacity: 1,
        duration: 3, // Dur√©e de chaque apparition
        ease: "power3.out",
        stagger: 0.2, // D√©lai progressif entre chaque √©l√©ment
        scrollTrigger: {
          trigger: cvRef.current, // D√©clencheur = Conteneur CV
          start: "top 90%", // D√©clenchement quand la section entre dans l‚Äô√©cran
          toggleActions: "play none none none", // Joue une seule fois
        },
      }
    );
  }, []);

  return (
    <div id="about" className="about-container">
      <div className="secTitle">
        <h1 ref={titleRef} className="title">
          A PROPOS
        </h1>
      </div>
      <div className="about-infos-container">
        <div className="about-grid-column">
          <div ref={pictureRef} className="about-picture">
            <img src={portrait} alt="" />
          </div>
        </div>

        <div className="about-grid-column">
          <div ref={textRef} className="about-presentation-text">
            <div className="about-presentation-text-high">
              <p>
                Cassandre Marion Architecte est une agence d‚Äôarchitecture ind√©pendante, cr√©ee
                en 2024 et bas√©e √† Rennes.
              </p>
              <p>
                J‚Äôai r√©alis√© mes √©tudes √† l‚Äôuniverit√© de Rome III et √† l‚ÄôEcole
                Nationale d‚ÄôArchitecture de Normandie. J‚Äôai appris √† analyser et
                sublimer des lieux existants au travers de la question de
                l‚Äôh√©ritage patrimoniale, gr√¢ce √† des masters sp√©cialis√©s dans ce
                domaine.
              </p>
              <p>
                Au cours de mes 6 ans en agences parisiennes, j‚Äôai travaill√© sur
                des programmes vari√©s tant en r√©habilitation qu‚Äôen conception
                neuve. J‚Äôai ainsi collabor√© sur des r√©novations de maisons, des
                r√©novations √©nerg√©tique d‚Äôensemble de logements, des b√¢timents
                tertiaires, des √©quipement publics.
              </p>
              <p>
                Fort des ces exp√©riences, je suis en mesure de vous accompagner
                sur tous types de projet, de la conception √† la r√©alisation. En
                misant sur une √©coute attentive et un √©change constructif, je
                vous accompagne dans la r√©alisation d‚Äôun projet sur mesure et
                qui refl√®te pleinement votre quotidien et vos envies.
              </p>
            </div>
            <div className="presentation-text-low">
              <p>
                <span className="about-text-anim">
                  N'h√©sitez pas √† me contacter pour discuter ensemble de{" "}
                </span>
                <span className="line2">
                  votre projet {article}{" "}
                  <span ref={wordRef} className="about-text-anim">
                    {words[index]}
                  </span>{" "}
                </span>
              </p>
            </div>
          </div>
        </div>

        <div ref={cvRef} className="about-grid-column">
          <div className="about-CV">
            <div className="about-date">
              <span className="about-year">2024.</span>
              <span className="description">
                Cr√©ation de mon agence üëè (Rennes)
              </span>
            </div>
            <div className="about-date">
              <span className="about-year">2021.</span>
              <span className="description">
                Chatillon Architecture (Paris)
              </span>
            </div>
            <div className="about-date">
              <span className="about-year">2018.</span>
              <span className="description">
                Dubuisson Architecture (Paris)
              </span>
            </div>
            <div className="about-date">
              <span className="about-year">2017.</span>
              <span className="description">Architecte HMONP</span>
            </div>
            <div className="about-date">
              <span className="about-year">2016.</span>
              <span className="description">
                Dipl√¥me d'Architecte - ENSAN
              </span>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}
